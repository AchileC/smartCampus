{# base.html.twig #}
<!DOCTYPE html>
<html lang="fr" data-bs-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Bienvenue{% endblock %}</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <!-- Bootstrap JS (avec Popper) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    {% block stylesheets %}
        <style>

            #toggleSidebarButton {
                position: fixed;
                top: 20px;
                left: 20px;
                z-index: 1051;
                background-color: #343a40;
                color: white;
                border: none;
                padding: 10px 15px;
                border-radius: 5px;
                box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
                cursor: pointer;
                transition: left 0.4s ease-in-out;
            }

            #toggleSidebarButton.with-sidebar {
                left: 270px; /* 250px de sidebar + 20px de marge */
                transition: left 0.4s ease-in-out;
            }


            .shake {
                animation: shake-animation 0.5s ease;
            }

            @keyframes shake-animation {
                0%, 100% { transform: translateX(0); }
                25% { transform: translateX(-5px); }
                50% { transform: translateX(5px); }
                75% { transform: translateX(-5px); }
            }

            /* Responsive: Écrans de largeur maximale 768px */
            @media (max-width: 768px) {
                /* Réduire la largeur de la sidebar */
                #sidebar {
                    width: 200px;
                    left: -200px; /* Ajuster la position fermée */
                }

                /* Décalage du contenu principal */
                #main-content.with-sidebar {
                    margin-left: 200px;
                }

                /* Ajuster la position du bouton de toggle */
                #toggleSidebarButton.with-sidebar {
                    left: 220px; /* 200px de sidebar + 20px de marge */
                }
            }

            /* Styles par défaut pour les écrans larges (min-width: 769px) */
            @media (min-width: 769px) {
                #sidebar {
                    width: 250px;
                }
            }

            .badge-custom-size {
                width: 100px;
                height: 25px;
                display: inline-flex;
                align-items: center;
                justify-content: center;
                text-align: center;
                padding: 0.5em 0.75em;
                font-size: 10px;
                border-radius: 2rem;
                font-weight: bold;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            /* Classe pour les bordures rouges */
            .is-invalid {
                border-color: #dc3545 !important;
            }

            /* Classe pour changer la couleur du bouton en rouge */
            .btn-danger {
                background-color: #dc3545 !important;
                border-color: #dc3545 !important;
            }

            .menu-button {
                margin: 20px;
                font-size: 24px;
                border: none;
                background: none;
                cursor: pointer;
                padding: 0;
            }

            .menu-button i {
                transition: transform 0.3s ease, opacity 0.3s ease;
            }

            .menu-button i.bi-x {
                transform: rotate(90deg);
            }

            .offcanvas-header {
                background-color: #f8f9fa;
                border-bottom: 1px solid #dee2e6;
            }

            body {
                font-family: Arial, sans-serif;
                display: flex;
                min-height: 100vh;
                margin: 0;
            }

            /* Sidebar styles */
            #sidebar {
                height: 100%;
                position: fixed;
                z-index: 1050;
                top: 0;
                left: -250px; /* Par défaut, la sidebar est fermée */
                background-color: #343a40;
                color: #fff;
                padding-top: 20px;
                transition: left 0.6s;
            }

            #sidebar .brand {
                display: flex;
                align-items: center;
                padding: 0 15px;
                font-size: 1.25rem;
                font-weight: bold;
            }

            #sidebar .brand img {
                width: 30px;
                height: 30px;
                margin-right: 10px;
                border-radius: 50%;
            }

            #sidebar hr {
                border-color: rgba(255, 255, 255, 0.1);
            }

            #sidebar .nav-link {
                color: #adb5bd;
                font-size: 16px;
                display: flex;
                align-items: center;
                padding: 10px 15px;
            }

            #sidebar .nav-link.active {
                color: #fff;
                background-color: #007bff;
            }

            #sidebar .nav-link i {
                margin-right: 10px;
            }

            #sidebar .nav-link:hover {
                background-color: #495057;
                color: #fff;
            }

            #sidebar .user-section {
                position: absolute;
                bottom: 0;
                width: 100%;
                padding: 10px 15px;
                border-top: 1px solid rgba(255, 255, 255, 0.1);
                display: flex;
                align-items: center;
            }

            #sidebar .user-section i {
                font-size: 1.8rem;
                color: #adb5bd;
                margin-right: 10px;
            }

            #sidebar .user-section .dropdown-toggle {
                color: #adb5bd;
            }

            #sidebar .user-section .dropdown-menu {
                background-color: #343a40;
            }

            #sidebar .user-section .dropdown-menu a {
                color: #adb5bd;
            }

            #sidebar .user-section .dropdown-menu a:hover {
                background-color: #495057;
                color: #fff;
            }

            #sidebar.open {
                left: 0;
            }

            #main-content {
                flex: 1;
                transition: margin-left 0.3s;
                padding: 20px;
                margin-left: 0;
            }

            #main-content.with-sidebar {
                margin-left: 250px;
            }

            [data-bs-theme="dark"] #theme-label {
                color: #ffffff;
            }

            [data-bs-theme="light"] #theme-label {
                color: #adb5bd;
            }

            [data-bs-theme="dark"] .card {
                background-color: #1e1e1e;
                border-color: #333333;
            }

            [data-bs-theme="dark"] .btn-secondary {
                background-color: #444444;
                border-color: #555555;
            }

            .theme-switch-wrapper {
                position: absolute;
                bottom: 60px;
                width: 100%;
                padding: 10px 15px;
                display: flex;
                align-items: center;
                gap: 10px;
            }

            #theme-label {
                font-weight: 500;
                transition: color 0.3s ease;
            }

        </style>
    {% endblock %}
</head>
<body>
<div id="sidebar">
    <div class="brand d-flex justify-content-center align-items-center">
        <a href="{{ path('app_home') }}" class="d-flex align-items-center text-decoration-none text-white">
            <img src="{{ asset('media/logo.png') }}" alt="Logo" style="height: 75px; width: auto; border-radius: 0;">
        </a>
    </div>
    <hr>
        <nav class="nav flex-column">
            {# Récupérer la route actuelle #}
            {% set current_route = app.request.attributes.get('_route') %}

            <a href="{{ path('app_home') }}"
               class="nav-link {{ current_route starts with 'app_home' ? 'active' : '' }}">
                <i class="bi bi-house-door"></i>
                Home
            </a>
            <a href="{{ path('app_rooms') }}"
               class="nav-link {{ current_route starts with 'app_rooms' ? 'active' : '' }}">
                <i class="bi bi-box"></i>
                Rooms
            </a>
            <a href="{{ path('app_todolist') }}"
               class="nav-link {{ current_route starts with 'app_todolist' ? 'active' : '' }}">
                <i class="bi bi-speedometer2"></i>
                To-Do-List
            </a>
            <a href="{{ path('app_acquisition_system') }}"
               class="nav-link {{ current_route starts with 'app_acquisition_system' ? 'active' : '' }}">
                <i class="bi bi-grid"></i>
                AS List
            </a>
        </nav>


        <div class="d-flex justify-content-start mb-2 theme-switch-wrapper">
            <span id="theme-label">Mode Sombre</span>
            <i class="bi bi-moon-fill theme-icon moon"></i>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="theme-toggle-switch">
                <label class="form-check-label" for="theme-toggle-switch"></label>
            </div>
        </div>

        <div class="user-section d-flex align-items-center">
            {% if app.user %}
                <!-- Utilisateur connecté -->
                <div class="dropdown">
                    <button class="btn d-flex align-items-center dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-person-circle me-2" style="font-size: 1.5rem;"></i>
                        <span>{{ app.user.username }}</span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li class="dropdown-item text-center">
                            <button id="toggleOptionsButton" class="btn btn-outline-info w-100">Activate Options</button>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <!-- Bouton Logout -->
                            <form method="post" action="{{ path('app_logout') }}" class="d-flex justify-content-center">
                                <input type="hidden" name="_csrf_token" value="{{ csrf_token('logout') }}">
                                <button type="submit" class="btn btn-danger btn-sm w-100">Logout</button>
                            </form>
                        </li>
                    </ul>
                </div>
            {% else %}
                <!-- Utilisateur non connecté -->
                <a href="{{ path('app_login') }}" class="btn btn-primary ms-auto">Login</a>
            {% endif %}
        </div>
    </div>

    <div id="main-content">
        <button id="toggleSidebarButton" onclick="toggleSidebar()">
            <i id="sidebarToggleIcon" class="bi bi-list"></i> <!-- Icône hamburger -->
        </button>

        {% block body %}
            <!-- Contenu spécifique à chaque page -->
        {% endblock %}
    </div>

    {% block javascripts %}
    <script>
        /**
         * @file base.html.twig
         * @brief Main Twig template for the Smart Campus application.
         *
         * This script handles the interactivity of the sidebar, theme toggling, and options activation.
         */

        document.addEventListener("DOMContentLoaded", function () {
            /**
             * @var {HTMLElement} sidebar - The sidebar element.
             * @var {HTMLElement} toggleButton - The main content area.
             * @var {HTMLElement} toggleIcon - The icon used to toggle the sidebar.
             */
            const sidebar = document.getElementById('sidebar');
            const toggleButton = document.getElementById('toggleSidebarButton');
            const toggleIcon = document.getElementById('sidebarToggleIcon');
            const mainContent = document.getElementById('main-content');


            /**
             * @function toggleSidebar
             * @brief Toggles the visibility of the sidebar and updates the toggle icon.
             *
             * This function adds or removes the 'closed' class on the sidebar and 'with-sidebar' on the main content.
             * It also switches the toggle icon between the hamburger and close icons.
             */
            // Fonction pour basculer la sidebar et ajuster le bouton
            window.toggleSidebar = function () {
                const isOpen = sidebar.classList.toggle('open');
                mainContent.classList.toggle('with-sidebar', isOpen);
                toggleButton.classList.toggle('with-sidebar', isOpen);

                // Basculer l'icône
                toggleIcon.classList.toggle('bi-list', !isOpen);
                toggleIcon.classList.toggle('bi-arrow-bar-left', isOpen);
            };

            /**
             * @var {HTMLInputElement} themeToggleSwitch - The theme toggle switch element.
             * @var {HTMLElement} themeLabel - The label displaying the current theme.
             */
            const themeToggleSwitch = document.getElementById("theme-toggle-switch");
            const themeLabel = document.getElementById("theme-label");

            // Set the initial theme based on localStorage or system preferences
            const savedTheme = localStorage.getItem("theme");
            const prefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
            const currentTheme = savedTheme ? savedTheme : (prefersDark ? "dark" : "light");

            // Apply the current theme
            document.documentElement.setAttribute("data-bs-theme", currentTheme);
            themeToggleSwitch.checked = currentTheme === "dark";
            themeLabel.innerText = "Dark Mode";

            /**
             * @event change
             * @memberof themeToggleSwitch
             * @brief Event listener for theme toggling.
             *
             * Updates the theme attribute, saves the preference to localStorage,
             * and updates the theme label accordingly.
             */
            themeToggleSwitch.addEventListener("change", function () {
                const newTheme = themeToggleSwitch.checked ? "dark" : "light";
                document.documentElement.setAttribute("data-bs-theme", newTheme);
                localStorage.setItem("theme", newTheme);
                themeLabel.innerText = "Dark Mode";
            });

            /**
             * @var {HTMLButtonElement} toggleOptionsButton - The button to toggle additional options.
             * @var {NodeListOf<HTMLElement>} optionsElements - The elements representing additional options.
             * @var {boolean} optionsState - The current state of options (enabled/disabled).
             */
            const toggleOptionsButton = document.getElementById('toggleOptionsButton');
            const optionsElements = document.querySelectorAll('.hidden-options');
            let optionsState = localStorage.getItem('optionsEnabled') === 'true';

            /**
             * @function updateOptionsState
             * @brief Updates the visibility of additional options and the button label.
             *
             * @param {boolean} enabled - Whether to enable or disable the options.
             */
            function updateOptionsState(enabled) {
                optionsElements.forEach(el => el.style.display = enabled ? '' : 'none');
                toggleOptionsButton.textContent = enabled ? 'Desactivate' : 'Activate Options';
                localStorage.setItem('optionsEnabled', enabled);

                // Update the "No match" message if it exists
                const noMatchMessage = document.getElementById('no-match-message');
                if (noMatchMessage) {
                    noMatchMessage.innerHTML = enabled
                        ? 'No match. Check spelling or <a href="{{ path('app_rooms_add') }}">create a new room</a>.'
                : 'No match. Check spelling or change filter.';
                }
            }

            // Initialize the options state
            updateOptionsState(optionsState);

            /**
             * @event click
             * @memberof toggleOptionsButton
             * @brief Event listener to toggle additional options.
             */
            toggleOptionsButton.addEventListener('click', () => {
                optionsState = !optionsState;
                updateOptionsState(optionsState);
            });

            const nameInput = document.querySelector('.form-control.is-invalid');

            if (nameInput) {
                // Ajoute l'effet de tremblement en re-déclenchant l'animation
                nameInput.classList.remove('shake');
                void nameInput.offsetWidth; // Hack pour redéclencher l'animation
                nameInput.classList.add('shake');

                // Change la couleur du bouton "Save Room"
                const saveButton = document.querySelector('button[type="submit"]');
                if (saveButton) {
                    saveButton.classList.remove('btn-success');
                    saveButton.classList.add('btn-danger');
                }
            }
        });
    </script>

    {% endblock %}
</html>
